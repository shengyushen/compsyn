# first generate the syn.tcl
m4  -D FILELIST=../src/fl_syn.v  -D DC_INCPATH=../src/XFIPCS  -D TOP_DESIGN=XFIPCS_TX_PCS ../../../vp/scr/syn.tcl.m4 > syn.tcl
# then run syn.tcl in design compiler
dc_shell-t -f syn.tcl > syn.log
lsi10k2rtl dc_synres.v  XFIPCS_TX_PCS > lsi10k2rtl.log
sed -r -e s/[\\]\([a-zA-Z0-9_]\+\)[\[]\([0-9]\+\)[\]]/\\1_\\2_ssyssyssyssy/g lsi10k2rtl_res.v > sed_res.v
compsyn_relational_plr sed_res.v XFIPCS_TX_PCS c1 10 -Input tx_fifo_pop_pre -Input txc_xfi -Input txd_xfi     -Output tx_data_out  -Output tx_fifo_pop_2  -Output  tx_mode  -Output t_type_li   -Output  TXxQUIET  -Output  TXxREFRESH  |tee compsyn.log
====input list====
input list tx_fifo_pop_pre
input list txc_xfi
input list txd_xfi
====output list====
output list tx_data_out
output list tx_fifo_pop_2
output list tx_mode
output list t_type_li
output list TXxQUIET
output list TXxREFRESH

+++++ start of non protocol input list +++
 loopback_xgmii  test_pat_seed_a  reset_to_pma_tx  pma_tx_clk  ALTERNATE_ENCODE  tx_test_pat_en  enable_alternate_refresh  test_pat_seed_b  tx_prbs_pat_en  reset_to_xgmii_tx  test_pat_sel  scr_bypass_enable  data_pat_sel 
+++++ start of protocol input list +++
 tx_fifo_pop_pre  txc_xfi  txd_xfi 
+++++ start of protocol output list +++
 tx_data_out  tx_fifo_pop_2  tx_mode  t_type_li  TXxQUIET  TXxREFRESH 
 TIME : encode_oneInstance2SAT_step1  84.802865 

./container_c1/dumpout/inst1_XFIPCS_TX_PCS.cnf
uniq tx_fifo_pop_pre @ 6421
uniq txc_xfi[7] @ 5015
uniq txc_xfi[6] @ 5016
uniq txc_xfi[5] @ 5017
uniq txc_xfi[4] @ 5018
uniq txc_xfi[3] @ 5019
uniq txc_xfi[2] @ 5020
uniq txc_xfi[1] @ 5021
uniq txc_xfi[0] @ 5022
nouniq txd_xfi[63] @ 6193
nouniq txd_xfi[62] @ 6194
nouniq txd_xfi[61] @ 6195
nouniq txd_xfi[60] @ 6196
nouniq txd_xfi[59] @ 6197
nouniq txd_xfi[58] @ 6198
nouniq txd_xfi[57] @ 6199
nouniq txd_xfi[56] @ 6200
nouniq txd_xfi[55] @ 6201
nouniq txd_xfi[54] @ 6202
nouniq txd_xfi[53] @ 6203
nouniq txd_xfi[52] @ 6204
nouniq txd_xfi[51] @ 6205
nouniq txd_xfi[50] @ 6206
nouniq txd_xfi[49] @ 6207
nouniq txd_xfi[48] @ 6208
nouniq txd_xfi[47] @ 6209
nouniq txd_xfi[46] @ 6210
nouniq txd_xfi[45] @ 6211
nouniq txd_xfi[44] @ 6212
nouniq txd_xfi[43] @ 6213
nouniq txd_xfi[42] @ 6214
nouniq txd_xfi[41] @ 6215
nouniq txd_xfi[40] @ 6216
nouniq txd_xfi[39] @ 6217
nouniq txd_xfi[38] @ 6218
nouniq txd_xfi[37] @ 6219
nouniq txd_xfi[36] @ 6220
nouniq txd_xfi[35] @ 6221
nouniq txd_xfi[34] @ 6222
nouniq txd_xfi[33] @ 6223
nouniq txd_xfi[32] @ 6224
nouniq txd_xfi[31] @ 6225
nouniq txd_xfi[30] @ 6226
nouniq txd_xfi[29] @ 6227
nouniq txd_xfi[28] @ 6228
nouniq txd_xfi[27] @ 6229
nouniq txd_xfi[26] @ 6230
nouniq txd_xfi[25] @ 6231
nouniq txd_xfi[24] @ 6232
nouniq txd_xfi[23] @ 6233
nouniq txd_xfi[22] @ 6234
nouniq txd_xfi[21] @ 6235
nouniq txd_xfi[20] @ 6236
nouniq txd_xfi[19] @ 6237
nouniq txd_xfi[18] @ 6238
nouniq txd_xfi[17] @ 6239
nouniq txd_xfi[16] @ 6240
nouniq txd_xfi[15] @ 6241
nouniq txd_xfi[14] @ 6242
nouniq txd_xfi[13] @ 6243
nouniq txd_xfi[12] @ 6244
nouniq txd_xfi[11] @ 6245
nouniq txd_xfi[10] @ 6246
nouniq txd_xfi[9] @ 6247
nouniq txd_xfi[8] @ 6248
nouniq txd_xfi[7] @ 6249
nouniq txd_xfi[6] @ 6250
nouniq txd_xfi[5] @ 6251
nouniq txd_xfi[4] @ 6252
nouniq txd_xfi[3] @ 6253
nouniq txd_xfi[2] @ 6254
nouniq txd_xfi[1] @ 6255
nouniq txd_xfi[0] @ 6256
maxN 3
time of finding flow control 1089.628701
  findLR_checkO_nonloop : p 3 l 3 r 3 nonloop 0 loop 0
  findLR_checkO_loop_wrap : p 3 l 3 r 3 ass len 0
the current remained configuration set : 
++++++++++++++++++++++++++
1'b0
++++++++++++++++++++++++++
  findLR_checkO_nonloop : p 4 l 4 r 4 nonloop 2 loop 2
loopsimass
( ( txc_xfi[4](5018) & !tx_fifo_pop_pre(-6421) ) | ( !txc_xfi[4](-5018) & tx_fifo_pop_pre(6421) & !txc_xfi[0](-5022) ) | ( !txc_xfi[4](-5018) & !tx_fifo_pop_pre(-6421) ) )
nonloopsimass
( ( tx_fifo_pop_pre(6421) & !txc_xfi[4](-5018) & !txc_xfi[0](-5022) ) | ( !tx_fifo_pop_pre(-6421) ) )
check_inverted_assertion_satisfiable OK ass len 2
the assertion before conjunct with TR
++++++++++++++++++++++++++
( ( txc_xfi[4](5018) & tx_fifo_pop_pre(6421) ) | ( !txc_xfi[4](-5018) & tx_fifo_pop_pre(6421) & txc_xfi[0](5022) ) )
++++++++++++++++++++++++++
p_pre 4 l 5 r 5: 
the assertion that make all uniq is:
++++++++++++++++++++++++++
1'b1
++++++++++++++++++++++++++
time of inferring predicate 247.649108
true idx 6421 nm tx_fifo_pop_pre
true idx 5015 nm txc_xfi[7]
only false idx 129872 nm txc_xfi[7]
true idx 5016 nm txc_xfi[6]
only false idx 129873 nm txc_xfi[6]
true idx 5017 nm txc_xfi[5]
only false idx 129874 nm txc_xfi[5]
true idx 5018 nm txc_xfi[4]
only false idx 129875 nm txc_xfi[4]
true idx 5019 nm txc_xfi[3]
only false idx 129876 nm txc_xfi[3]
true idx 5020 nm txc_xfi[2]
only false idx 129877 nm txc_xfi[2]
true idx 5021 nm txc_xfi[1]
only false idx 129878 nm txc_xfi[1]
true idx 5022 nm txc_xfi[0]
only false idx 129879 nm txc_xfi[0]
false idx 6193 nm txd_xfi[63]
FATAL : it is SAT in characterization_interp_AB
often this is caused by not enough assumption in generating interpolant
max_index 208100
max_index_all 416200
max_index 208100
cls size 984858
m4  -D FILELIST=resulting_dual_cnf.v  -D DC_INCPATH=../src/XFIPCS  -D TOP_DESIGN=resulting_dual ../../../vp/scr/syn_dual.tcl.m4 > syn_dual.tcl
# then run syn.tcl in design compiler
dc_shell-t -f syn_dual.tcl > syn_dual.log
