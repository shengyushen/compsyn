// Accellera Standard V1.6 Open Verification Library (OVL).
// Accellera Copyright (c) 2005-2006. All rights reserved.

vunit assert_win_unchange_assert_vunit(assert_win_unchange_assert)
{
  default clock = (posedge clk);
  
  property ASSERT_WIN_UNCHANGE_P = always (
           ({start_event && !window} |=> // This ignores any subsequent start_event while window is open
           {(test_expr == prev(test_expr))[*]; (test_expr == prev(test_expr)) && end_event})
           abort(!reset_n));
  
  A_ASSERT_WIN_UNCHANGE_P:
  assert ASSERT_WIN_UNCHANGE_P
  report "VIOLATION: ASSERT_WIN_UNCHANGE Checker Fires: Test expression has changed value before the event window closes";
}
                                                                                                                                                 
vunit assert_win_unchange_assume_vunit(assert_win_unchange_assume)
{
  default clock = (posedge clk);
  
  property ASSERT_WIN_UNCHANGE_P = always (
           ({start_event && !window} |=> // This ignores any subsequent start_event while window is open
           {(test_expr == prev(test_expr))[*]; (test_expr == prev(test_expr)) && end_event})
           abort(!reset_n));
  
  M_ASSERT_WIN_UNCHANGE_P:
  assume ASSERT_WIN_UNCHANGE_P;
}
                                                                                                                                                 
vunit assert_win_unchange_cover_vunit (assert_win_unchange_cover)
{
  default clock = (posedge clk);
  
  cover_window_open:
  cover {reset_n && start_event && !window}
  report "COVERAGE REPORT : ASSERT_WIN_UNCHANGE Checker: window_open covered";
  
  cover_window:
  cover {reset_n && start_event && !window;(reset_n && !end_event && window)[*];reset_n && end_event && window}
  report "COVERAGE REPORT : ASSERT_WIN_UNCHANGE Checker: window covered";
}

