// Accellera Standard V1.6 Open Verification Library (OVL).
// Accellera Copyright (c) 2005-2006. All rights reserved.

vunit assert_window_assert_vunit (assert_window_assert)
{
  default clock = (posedge clk);
  
  property ASSERT_WINDOW_P = always (
           ({rose(start_event) && !end_event} |=> //pre-condition does not care if start_event is/isn't overlapped with test_expr 
           {(test_expr && !end_event)[*];test_expr && end_event}) //ensures end_event is overlapped with test_expr 
           abort(!reset_n));
 
  A_ASSERT_WINDOW_P:
  assert ASSERT_WINDOW_P
  report "VIOLATION: ASSERT_WINDOW Checker Fires : Test expression changed value during an open event window";
}

vunit assert_window_assume_vunit (assert_window_assume)
{
  default clock = (posedge clk);
  
  property ASSERT_WINDOW_P = always (
           ({rose(start_event) && !end_event} |=> //pre-condition does not care if start_event is/isn't overlapped with test_expr
           {(test_expr && !end_event)[*];test_expr && end_event}) //ensures end_event is overlapped with test_expr
           abort(!reset_n));
                                                                                                                                                 
  M_ASSERT_WINDOW_P:
  assume ASSERT_WINDOW_P;
}

vunit assert_window_cover_vunit (assert_window_cover)
{
  default clock = (posedge clk);

  cover_window_open:
  cover {reset_n && rose(start_event) & !end_event}
  report "COVERAGE REPORT : ASSERT_WIN_CHANGE Checker: window_open covered";
                                                                                      
  cover_window:
  cover {reset_n && rose(start_event) & !end_event; (reset_n && !end_event)[*]; reset_n && end_event}
  report "COVERAGE REPORT : ASSERT_WIN_CHANGE Checker: window covered";
}

