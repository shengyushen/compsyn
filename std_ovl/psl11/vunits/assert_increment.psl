// Accellera Standard V1.6 Open Verification Library (OVL).
// Accellera Copyright (c) 2005-2006. All rights reserved.

vunit assert_increment_assert_vunit (assert_increment_assert)
{
  default clock = (posedge clk);

  property ASSERT_INCREMENT_P = always (
            (value > 0) && prev(reset_n) && reset_n && (test_expr != prev(test_expr)) ->
            (test_expr > prev(test_expr) ? 
            (test_expr - prev(test_expr)) == value :
            (test_expr + ({width{1'b1}} - prev(test_expr)) + 1'b1 == value)));                                                                                                                                      
  A_ASSERT_INCREMENT_P:
  assert ASSERT_INCREMENT_P
  report "VIOLATION: ASSERT_INCREMENT Checker Fires: Test expression is increased by a value other than specified";
}

vunit assert_increment_assume_vunit (assert_increment_assume)
{
  default clock = (posedge clk);

  property ASSERT_INCREMENT_P = always (
            (value > 0) && prev(reset_n) && reset_n && (test_expr != prev(test_expr)) ->
            (test_expr > prev(test_expr) ?
            (test_expr - prev(test_expr)) == value :
            (test_expr + ({width{1'b1}} - prev(test_expr)) + 1'b1 == value)));                                                                                                                                        
  M_ASSERT_INCREMENT_P:
  assume ASSERT_INCREMENT_P;
}

vunit assert_increment_cover_vunit (assert_increment_cover)
{ 
  default clock = (posedge clk);

  cover_test_expr_change:
  cover {prev(reset_n) && reset_n && (test_expr != prev(test_expr))}
  report "COVERAGE REPORT : ASSERT_INCREMENT Checker: test_expr_change covered";

}
 
