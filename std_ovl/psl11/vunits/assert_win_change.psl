// Accellera Standard V1.6 Open Verification Library (OVL).
// Accellera Copyright (c) 2005-2006. All rights reserved.

vunit assert_win_change_assert_vunit (assert_win_change_assert)
{
  default clock = (posedge clk);

  property ASSERT_WIN_CHANGE_P = always (
           ({start_event && !window} |=> // Ignores any subsequent start_event while window is open
           {((test_expr == prev(test_expr)) && !end_event)[*];(test_expr != prev(test_expr))})
           abort(!reset_n));
  
  A_ASSERT_WIN_CHANGE_P:
  assert ASSERT_WIN_CHANGE_P
  report "VIOLATION: ASSERT_WIN_CHANGE Checker Fires: Test expression has not changed value before window is closed";
}

vunit assert_win_change_assume_vunit (assert_win_change_assume)
{
  default clock = (posedge clk);
  
  property ASSERT_WIN_CHANGE_P = always (
           ({start_event && !window} |=> // Ignores any subsequent start_event while window is open
           {((test_expr == prev(test_expr)) && !end_event)[*];(test_expr != prev(test_expr))})
           abort(!reset_n));

  M_ASSERT_WIN_CHANGE_P:
  assume ASSERT_WIN_CHANGE_P;
}

vunit assert_win_change_cover_vunit (assert_win_change_cover)
{ 
  default clock = (posedge clk);

  cover_window_open:
  cover {reset_n && start_event && !window}
  report "COVERAGE REPORT : ASSERT_WIN_CHANGE Checker: window_open covered";
                                                                                                                                     
  cover_window:
  cover {reset_n && start_event && !window;(reset_n && !end_event && window)[*];reset_n && end_event && window}
  report "COVERAGE REPORT : ASSERT_WIN_CHANGE Checker: window covered";
}
 
