// Accellera Standard V1.6 Open Verification Library (OVL).
// Accellera Copyright (c) 2005-2006. All rights reserved.

vunit assert_decrement_assert_vunit (assert_decrement_assert)
{
  default clock = (posedge clk);

  property ASSERT_DECREMENT_P = always (
           (value > 0) && prev(reset_n) && reset_n && (test_expr != prev(test_expr)) ->
           (test_expr < prev(test_expr) ?
           (prev(test_expr) - test_expr) == value :
           (prev(test_expr) + ({width{1'b1}} - test_expr) + 1'b1 == value))); 
  
  A_ASSERT_DECREMENT_P:
  assert ASSERT_DECREMENT_P
  report "VIOLATION: ASSERT_DECREMENT Checker Fires: Test expression is decreased by a value other than specified";
}

vunit assert_decrement_assume_vunit (assert_decrement_assume)
{
  default clock = (posedge clk);

  property ASSERT_DECREMENT_P = always (
            (value > 0) && prev(reset_n) && reset_n && (test_expr != prev(test_expr)) ->
            (test_expr < prev(test_expr) ? 
            (prev(test_expr) - test_expr) == value :
            (prev(test_expr) + ({width{1'b1}} - test_expr) + 1'b1 == value)));                                                                                                                                        
  M_ASSERT_DECREMENT_P:
  assume ASSERT_DECREMENT_P;
}

vunit assert_decrement_cover_vunit (assert_decrement_cover)
{ 
  default clock = (posedge clk);

  cover_test_expr_change:
  cover {prev(reset_n) && reset_n && (test_expr != prev(test_expr))}
  report "COVERAGE REPORT : ASSERT_DECREMENT Checker: test_expr_change covered";
}
 
